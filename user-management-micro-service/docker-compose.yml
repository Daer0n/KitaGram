version: "3.8"

services:

  um-db:
    container_name: user-management-db
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - innotter-micro-service_internship-net

  um-redis:
    container_name: user-management-redis
    image: redis:6.2-alpine
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    ports:
      - "6379:6379"
    networks:
      - innotter-micro-service_internship-net

  um-localstack:
    container_name: user-management-localstack-main
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3,ses
      - AWS_DEFAULT_REGION=eu-central-1
      - AWS_ACCESS_KEY_ID=AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=AWS_SECRET_ACCESS_KEY
    volumes:
      - ${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./aws:/etc/localstack/init/ready.d
    networks:
      - innotter-micro-service_internship-net

  um-app:
    container_name: user-management-app
    build: 
      context: .
      network: host
    command: bash -c "poetry run alembic upgrade head && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./app:/code/app
    ports:
      - "8000:8000"
    depends_on:
      - um-db
    networks:
      - innotter-micro-service_internship-net


networks:
  innotter-micro-service_internship-net:
    external: true